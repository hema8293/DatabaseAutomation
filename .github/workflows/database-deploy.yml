name: Database Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger from GitHub

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install MySQL Connector
        run: pip install mysql-connector-python

      - name: Execute SQL Script
        env:
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        run: |
          echo "🔗 Connecting to MySQL Database at $MYSQL_HOST..."
          
          python - <<EOF
          import mysql.connector
          import os

          try:
              # Fetch environment variables
              MYSQL_HOST = os.getenv("MYSQL_HOST")
              MYSQL_USER = os.getenv("MYSQL_USER")
              MYSQL_PASSWORD = os.getenv("MYSQL_PASSWORD")
              MYSQL_DATABASE = os.getenv("MYSQL_DATABASE")

              print(f"🔗 Connecting to MySQL Database at {MYSQL_HOST}...")
              
              # Database connection configuration
              DB_CONFIG = {
                  "host": MYSQL_HOST,
                  "user": MYSQL_USER,
                  "password": MYSQL_PASSWORD,
                  "database": MYSQL_DATABASE,
                  "port": 3306
              }

              connection = mysql.connector.connect(**DB_CONFIG)
              cursor = connection.cursor()

              # Execute SQL script
              sql_file = "schema_changes.sql"
              print(f"🚀 Executing {sql_file}...")
              with open(sql_file, "r") as file:
                  sql_commands = file.read().split(";")

              for command in sql_commands:
                  if command.strip():
                      cursor.execute(command)

              connection.commit()
              print("✅ SQL script executed successfully.")

          except mysql.connector.Error as err:
              print(f"❌ Database Error: {err}")
              exit(1)

          finally:
              if 'connection' in locals() and connection.is_connected():
                  cursor.close()
                  connection.close()
                  print("🔗 Connection closed.")
          EOF
